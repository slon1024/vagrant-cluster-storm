- name: prepare group
  group: name=kafka state=present

- name: prepare user
  user: name=kafka group=kafka comment="kafka" state=present

- name: fetch
  get_url: url={{ kafka['url'] }} dest={{ kafka['archive'] }}

- name: unpack
  command: chdir={{ install_dir }} tar xf {{ kafka['archive'] }} creates={{ kafka['home_dir'] }}

- name: fetch
  get_url: url={{ kafka['url'] }} dest={{ kafka['archive'] }}

- name: symlink
  file: src={{ kafka['home_dir'] }} dest={{ kafka['link'] }} owner=kafka group=kafka state=link

- name: gradle jar
  command: chdir={{ kafka['home_dir'] }} ./gradlew jar creates=core/build

- name: create log dir
  file: path={{ kafka['log_dir'] }} owner=kafka group=kafka state=directory

- name: server config
  template: src=server.properties.j2 dest={{ kafka['home_dir'] }}/config/server.properties owner=kafka group=kafka mode=755
  notify: restart kafka

- name: log config
  template: src=log4j.properties.j2 dest={{ kafka['home_dir'] }}/config/log4j.properties owner=kafka group=kafka mode=755
  notify: restart kafka

- name: run-class script with MX4j enabled
  copy: src=kafka-run-class.sh dest={{ kafka['home_dir'] }}/bin/kafka-run-class.sh owner=kafka group=kafka mode=765

- name: init script
  template: src=etc/init/kafka.conf.j2 dest=/etc/init/kafka.conf
  notify: restart kafka

- name: supervisord configuration
  template: >
    src=etc/init/supervisor.conf.j2
    dest=/etc/supervisor/conf.d/kafka.conf
    owner=root
    group=root
    mode=0644
  register: supervisord
  notify:
    - reload supervisord
    - restart kafka

- name: reload supervisord
  shell: supervisorctl reread && supervisorctl update
  when: supervisord.changed

- name: ensure supervisor running
  service: name=supervisor enabled=yes state=started

- name: add kafka to PATH
  template: src=etc/profile.d/kafka.sh.j2 dest=/etc/profile.d/kafka.sh mode=0644
